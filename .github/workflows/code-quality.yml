name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"

    - name: Set up environment
      run: |
        uv venv --python $(which python)
        uv sync --dev

    - name: Run ruff linting
      run: |
        uv run ruff check . --output-format=github

    - name: Run ruff formatting check
      run: |
        uv run ruff format --check .

    - name: Check for security issues with bandit
      run: |
        uv run bandit -r clesh/ -f json -o bandit-report.json
        uv run bandit -r clesh/

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"

    - name: Set up environment
      run: |
        uv venv --python $(which python)
        uv sync --dev

    - name: Run mypy type checking
      run: |
        uv run mypy clesh/ --ignore-missing-imports

  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"

    - name: Check for dependency vulnerabilities
      run: |
        uv venv --python $(which python)
        uv sync --dev
        uv run safety check --json > safety-report.json
        uv run safety check

  docs-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"

    - name: Set up environment
      run: |
        uv venv --python $(which python)
        uv sync --dev

    - name: Check docstring coverage
      run: |
        uv run interrogate clesh/ --verbose --fail-under=80

    - name: Validate README and examples
      run: |
        # Check that examples in README work
        if [ -f "examples/demo.py" ]; then
          echo "Testing demo script..."
          uv run python examples/demo.py
        fi
