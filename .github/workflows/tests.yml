name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"
        enable-cache: true

    - name: Set up environment
      run: |
        uv sync --all-extras
        uv run ruff --version

    - name: Run linting
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Run tests with coverage
      run: |
        uv run pytest --cov=clesh --cov-report=xml --cov-report=term-missing tests/

    - name: Upload coverage reports to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false


  integration-test:
    runs-on: ubuntu-latest
    name: Integration tests with real data

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"
        enable-cache: true

    - name: Set up environment
      run: |
        uv sync --all-extras

    - name: Run integration tests
      run: |
        uv run pytest tests/ -m "integration" -v --tb=short

    - name: Run slow tests
      run: |
        uv run pytest tests/ -m "slow" -v --tb=short

  regression-test:
    runs-on: ubuntu-latest
    name: Regression tests for recent fixes

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.9"
        enable-cache: true

    - name: Set up environment
      run: |
        uv sync --all-extras

    - name: Run regression tests
      run: |
        uv run pytest tests/test_clesh.py::TestRegressionFixes -v --tb=short

    - name: Test normalization functionality
      run: |
        uv run pytest tests/test_clesh.py -k "normalization" -v

    - name: Test Tukey post-hoc functionality
      run: |
        uv run pytest tests/test_clesh.py -k "tukey" -v
